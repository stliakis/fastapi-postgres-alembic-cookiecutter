name: Production server build & deploy of {{cookiecutter.project_name}}

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Create env file
        run: |
          touch .env
          echo "PYTHONUNBUFFERED=1" >> .env
      - name: Build image
        run: docker compose -f docker-compose.yml -f docker-compose.production.yml build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ "{{" }} github.actor {{ "}}" }}
          password: ${{ "{{" }} secrets.GITHUB_TOKEN {{ "}}" }}

      - name: Push image to DO Container Registry
        run: docker compose -f docker-compose.yml -f docker-compose.production.yml push

      - name: Copy the docker compose & .env files to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_HOST {{ "}}" }}
          username: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_USERNAME {{ "}}" }}
          key: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_SECRET {{ "}}" }}
          port: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_PORT {{ "}}" }}
          source: "docker-compose.production.yml,.env"
          target: "/app"

      - name: Start the stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_HOST {{ "}}" }}
          username: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_USERNAME {{ "}}" }}
          key: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_SECRET {{ "}}" }}
          port: ${{ "{{" }} secrets.DOCKER_SWARM_SSH_PORT {{ "}}" }}
          script: |
            mkdir -p /app
            cd /app
            docker stack deploy -c docker-compose.production.yml --resolve-image=always --with-registry-auth {{cookiecutter.project_slug}}
            sleep 5

      - name: Send finish notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: '#FF0000'
          SLACK_TITLE: 'Deployed {{cookiecutter.project_slug}}'
          SLACK_MESSAGE: '${{ "{{" }} github.actor {{ "}}" }} has deployed {{cookiecutter.project_slug}}'
          SLACK_WEBHOOK: ${{ "{{" }} secrets.GLOBAL_SLACK_WEBHOOK {{ "}}" }}